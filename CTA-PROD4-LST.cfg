% Configuration file for a LST in Prod-4/5 (CTA-PROD4 setup).

  echo
  echo ************************************************************************
#ifdef TELESCOPE
  echo Configuration for large-size telescope $(TELESCOPE) in Prod-4/5.
#else
  echo Global configuration parameters for large-size telescopes in Prod-4/5.
#endif
  echo ************************************************************************
  echo

% Start with configuration items not specific for LST.

#include <CTA-PROD4-site.cfg>
#include <CTA-PROD4-common.cfg>
#include <CTA-PROD4-sipm.cfg>

% The remainder is specific for LST.

% ------------------------- Optical parameters --------------------------

optics_config_name = LST
optics_config_version = 2020-04-29                              % Latest change: again new reflectivity curve

parabolic_dish      = 1                                         % Mirrors are on a parabolic dish.
focal_length        = 2800                                      % Nominal focal length [cm]. Effective focal length is 2930.6 cm based on optical ray-tracing.
effective_focal_length = 2930.565                               % Only to be used for image analysis. No effect in simulation itself.
mirror_focal_length = 0                                         % Adapted automatically unless specified in file (idea is to have three groups or sort)
dish_shape_length   = 2800                                      % Same as nominal focal length for strictly parabolic design

#ifdef PERFECT_DISH
  % If all mirrors are just perfect:
  mirror_list         = mirror_CTA-LST-v20141201-198.dat        % 388.38 m^2 projected
  random_focal_length            = 0.

  mirror_reflection_random_angle = 0.0
  mirror_align_random_distance   = 0.0
  mirror_align_random_horizontal = 0.0,0.,0.,0.
  mirror_align_random_vertical   = 0.0,0.,0.,0.
#else
  % Better try to use a realistic configuration:
# ifdef LST_MIRRORS_GROUPED
   mirror_list         = mirror_CTA-LST-flen_grouped.dat        % Three groups of focal lengths (negative flen values! random flen still applies)
   random_focal_length =  0,20                                  % Assume flat distribution with a maximum of +-20 cm deviation from the given focal length
# else
#  if defined(CTA_SOUTH)
    echo Using mirror list for CTA-South LSTs.
    mirror_list         = mirror_CTA-S-LST_v2020-04-07.dat      % Based on CTA-North LST 2-4 average of individual facet focal lengths.
#  elif ( defined(LST1_PROTOTYPE) || ( defined(CTA_NORTH) && TELESCOPE == 1 && undefined(LST2) && undefined(LST3) && undefined(LST4) ) || defined(LST1) )
    echo Using mirror list for CTA-North LST-1.
    mirror_list         = mirror_CTA-N-LST1_v2019-03-31.dat     % Individual focal lengths
#  elif ( ( defined(CTA_NORTH) && TELESCOPE == 2 ) || defined(LST2) )
    echo Using mirror list for CTA-North LST-2.
    mirror_list         = mirror_CTA-N-LST2_v2020-04-07.dat     % Individual focal lengths
#  elif ( ( defined(CTA_NORTH) && TELESCOPE == 3 ) || defined(LST3) )
    echo Using mirror list for CTA-North LST-3.
    mirror_list         = mirror_CTA-N-LST3_v2020-04-07.dat     % Individual focal lengths
#  elif ( ( defined(CTA_NORTH) && TELESCOPE == 4 ) || defined(LST4) )
    echo Using mirror list for CTA-North LST-4.
    mirror_list         = mirror_CTA-N-LST4_v2020-04-07.dat     % Individual focal lengths
#  else
    echo Using mirror list for unknown LST.
    mirror_list         = mirror_CTA-S-LST_v2020-04-07.dat      % Based on CTA-North LST 2-4 average of individual facet focal lengths.
#  endif
   random_focal_length =  0,0                                   % without extra randomness.
# endif

  mirror_reflection_random_angle = 0.0075,0.125,0.037 % [deg] with tail in distribution needed to match telescope cumulative PSF distribution
  mirror_align_random_distance   = 0.0 % cm
% LST-1 cumulative PSF distribution reproduced with worse mirror alignment than initially assumed.
% The tail in the distribution could be due to very poorly aligned mirrors but we only have
% the second random reflection angle component to describe the PSF tail (12.5% with 0.037 deg.).
  mirror_align_random_horizontal = 0.0039,28.,0.0,0.0           % no zenith dependence due to active mirror control
  mirror_align_random_vertical   = 0.0039,28.,0.0,0.0           % no zenith dependence due to active mirror control
#endif

mirror_offset       = 93.25                                     % [cm] behind/below axes crossing (see redmine issue 35807)
focus_offset        = 6.55                                      % 1./(1./2800.-1./12.e5)-2800. (focusing at 12 km distance), starlight focusing target to pixel entrance
mirror_reflectivity = ref_LST_2020-04-23.dat                    % Revised version received 2020-04-23.

% Accuracy of the tracking and measurement of current direction.
% Pointing errors can always be mimicked at the analysis level:
telescope_random_angle         = 0.
telescope_random_error         = 0.

% -------------------------- Camera ------------------------------
% The telescope_transmission factor corrects for the shadowing by
% elements not explicitly included in sim_telarray.
% It is thus the ratio of the effective optical area (in projection) based on a
% detailed ray-tracing with all elements over the same area in simplified
% ray-tracing by sim_telarray.
% The original evaluation by detailed ray-tracing (K.Noda, 2013, with ROBAST)
% resulted in an un-projected non-shadowed mirror area of 369.14+-0.08 m^2, from
% which after projection 365.2+-0.1 m^2 are expected. Re-evaluation in Dec. 2017
% resulted in 365.4 m^2 projected. All on-axis.
% Evaluation with sim_telarray results in 380.37+-0.07 m^2 with the 300 cm square
% camera body and 377.71+-0.07 m^2 with the 348 cm square camera body assumption
% including the mounting frame.

% Now using bigger camera body value (including mounting frame) by default.
camera_body_shape = 2                                                   % Square camera body, needs newer sim_telarray
camera_body_diameter = 348                                              % cm (only for shadowing, includes mounting frame)
telescope_transmission = 0.86241                                        % tuned with the best available muon data (Jan. 15th, 2020) by Y. Suda
camera_transmission = 1.0                                               % All of the transmission is now included in the camera_filter file.
camera_filter = transmission_lst_window_No7-10_ave.dat                  % PMMA windows which is the nominal LST window

camera_config_file = camera_CTA-LST_SiPM_Ideal_analogsum21.dat          % Camera config file for SiPM camera, specific funnels, and new geometry

#define ONLY_ANALOG_SUM 1
#define NO_MAJORITY 1
#define NO_DIGITAL_SUM 1

camera_pixels = 7987                                                    % needs to be specified explicitly

min_photons = 0                                                         % To avoid missing photons in the trigger scans (it doesn't increase too much the CPU time)
min_photoelectrons = 0                                                  % To avoid missing pe in the trigger scans (it increases largely the CPU time)
store_photoelectrons = 0                                                % Save individual photo-electrons from this minimal number
save_photons = 3                                                        % if set to 1 saves photon bunches data from corsika files
                                                                        % if set to 2 saves photo-electron data
                                                                        % if set to 3 saves both : photon bunches and photo-electrons
                                                                        % i.e. the 4 options above try to save all the MC data provided by corsika and simtel
#ifdef LST_EXTREME_TRIGGER
  min_photons = 220                                                     % With fewer photons don't waste CPU time.
  min_photoelectrons = 18                                               % 50% efficiency at 60 p.e.
  store_photoelectrons = 16                                             % Save individual photo-electrons
#endif

% --------------- Placing of signals in simulated windows ---------------

% We need to shift the pulses further 'right' in the simulated time windows,
% such that the occasional early signals (at large core distance) are better covered.
photon_delay = 19                                   % ns

% --------------------------- Trigger -----------------------------------

% The trigger simulation is over a slightly earlier window than the ADC signals (from interval -3 to 64 in ADC frame).
disc_bins = 68                                      % Number of time intervals simulated for trigger.
disc_start = 3                                      % How many intervals the trigger simulation starts before the ADC.

% The camera config file has majority, analog sum, plus digital sum.
#ifndef NO_ANALOG_SUM
# define ANALOG_SUM 1
#endif

discriminator_pulse_shape = template_3ns.txt                    % For SiPMs
discriminator_amplitude = 15.98                                  % For 1 gain, its value should be equal to fadc_amplitude

% Telescope trigger (specified even if no majority trigger is used):
default_trigger = AnalogSum
teltrig_min_time = 0.5                                                  % ns
teltrig_min_sigsum = 7.8                                                % pV.s

% With a single trigger type no delay compensation between trigger types needed.
% Could be used though for systematic differences between telescope types.
trigger_delay_compensation = all: 0

only_triggered_telescopes=1

% ------------------------------ Readout --------------------------------

% Sampling rate in MHz:
fadc_MHz = 1024                                                 % MHz sampling rate

% Read-out of a 40 ns window (within simulated 55 ns) following the actual trigger:
fadc_bins = 75                                                  % Number of time intervals simulated for ADC (extends by 10 ns beyond the 68 ns discriminator simulation)
fadc_sum_bins = 40                                              % Number of ADC time intervals actually summed up or written as trace.
fadc_sum_offset = 15                                            % How many intervals summation starts before telescope trigger.

fadc_pedestal = 300                                             % Per time slice (positive signals only: unsigned!)
fadc_amplitude = 15.98                                           % The peak amplitude in a time slice for high gain and XT corrected SPE for a 500 pe dynamic range
fadc_noise = 1.97                                               % Derived from the SPE fit of SiPM parameters by Andrii Nagai

num_gains = 1                                                   % Make it clear that we want to use two gains

fadc_max_signal = 16383                                         % 14-bit ADC (applies to both channels unless specified)
fadc_max_sum = 16777215                                         % 24-bit sum is unlimited for all practical purposes.

% ----------------------------- Analysis --------------------------------

% Pulse shape analysis with pulse sum around global peak
% position only for significant pixels.
pulse_analysis = -30

% Pulse analysis provides a conditional 8 ns integration at 1000 MHz sampling rate.
sum_before_peak = 3
sum_after_peak = 4

tailcut_scale = 2.6 % For built-in image cleaning (not relevant for later analysis)
